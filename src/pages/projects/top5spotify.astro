---
import Layout from "@layouts/Layout.astro";
import { type GalleryItem, type TechItem } from "@components/ProjectPage.astro";
import { Image } from "astro:assets";

// Images
import top5login from "@assets/projects/top5spotify/top5login.png";
import top5spotify from "@assets/projects/top5spotify/top5spotify.png";
import top5MobileView from "@assets/projects/top5spotify/topFiveDemoMobile.png";
import top5DemoMode from "@assets/projects/top5spotify/topFiveDemoMode.png";
import top5DemoModal from "@assets/projects/top5spotify/topFiveDemoModeModal.png";
// Logos
import reactLogo from "@assets/techLogos/reactLogo.png";
import axiosLogo from "@assets/techLogos/axiosApi.png";
import bootstrapLogo from "@assets/techLogos/bootstrap.svg";
import expressLogo from "@assets/techLogos/express-js.svg";
import herokuLogo from "@assets/techLogos/heroku.svg";
import nodeLogo from "@assets/techLogos/node-js.svg";

// Icons
import top5spotifylogo from "@assets/projects/top5spotify/proto_logo.svg";
import ProjectPage from "@components/ProjectPage.astro";

const tech: TechItem[] = [
  { techName: "ReactJS", techLogo: { img: reactLogo, imgAlt: "React" } },
  { techName: "Axios", techLogo: { img: axiosLogo, imgAlt: "Axios" } },
  {
    techName: "ExpressJS",
    techLogo: {
      img: expressLogo,
      imgAlt: "Express",
    },
  },
  { techName: "NodeJS", techLogo: { img: nodeLogo, imgAlt: "NodeJS" } },
  { techName: "React Bootstrap", techLogo: { img: bootstrapLogo, imgAlt: "bootstrap" } },
  { techName: "Heroku Deploy", techLogo: { img: herokuLogo, imgAlt: "Heroku" } },
];
const link2 = { img: top5spotifylogo, text: "Live App", url: "/" };
const gallery: GalleryItem[] = [
  {
    image: { img: top5spotify, imgAlt: "Top 5 Main" },
    caption: "App Main: Authorized User",
  },
  {
    image: { img: top5login, imgAlt: "Top 5 Login Page" },
    caption: "Login Page (pre-auth)",
  },
  {
    image: { img: top5DemoMode, imgAlt: "Top 5 Demo Mode" },
    caption: "App Main: Demo Mode (Unauthorized User)",
  },
];
---

<Layout>
  <span class="text-5xl xs:text-8xl text-center not-prose w-full inline-block">üé∂üü¢üéß</span>
  <ProjectPage
    title="Top-Five Spotify"
    technologies={tech}
    githubRepoLink="https://github.com/OptimisticShibe/ThreeJSPersonalSite"
    link2={link2}
    gallery={gallery}
  >
    <p slot="summary">
      A hobby project built from the ground up to create a useful, interesting spotify data-display app, and to practice using ReactJS and integrating with a
      public API
    </p>

    <ol slot="goal">
      <li>Successfully implement async auth via an external api</li>
      <li>Display the user's Top 5 Spotify data in a visually-appealing manner, easily screenshotted for posting online or sharing with friends</li>
      <li>Create custom, responsive UI elements to enhance readability of app user actions</li>
      <li>Design an app that *I personally* would enjoy using outside of coding practice</li>
    </ol>

    <ol slot="uxFlow">
      <li>User clicks "login to Spotify"</li>
      <li>App sends an authorization code request to Spotify with the client ID and requested scopes</li>
      <li>User is redirected to Spotify's website to sign in, and allow the app to access specific data in their account</li>
      <li>Spotify redirects back to TopFiveSpotify with an authorization code</li>
      <li>
        Code is caught by custom <strong>useAuth</strong> hook to route through the express server to request an auth token from Spotify through a separate endpoint
      </li>
      <li>If successful, app will refresh, and user will see the full app page with their data already loaded</li>
    </ol>
    <div slot="details">
      <h3>üîÅ Asynchronus API Data Fetching</h3>
      <section>
        <p>
          There are a total of 7 calls to the Spotify API after user authentication:
          <ul>
            <li><a href="https://developer.spotify.com/documentation/web-api/reference/get-users-profile">Get User Profile</a></li>
            <li>
              Get User's <a href="https://developer.spotify.com/documentation/web-api/reference/get-users-top-artists-and-tracks">Top Artists</a> (x3) and <a
                href="https://developer.spotify.com/documentation/web-api/reference/get-users-top-artists-and-tracks">Top Tracks</a
              > (x3)
            </li>
          </ul>
        </p>
        <p>This app loads all 7 at once in a Promise chain and stores the data in the client's local storage.</p>
      </section>
      <h3>üì± Responsive Layout</h3>
      <section>
        <p>Using React Bootstrap's breakpoints, the app will shift into the following vertical format:</p>
        <div class="flex justify-center">
          <Image src={top5MobileView} alt="Top 5 Mobile View" />
        </div>
      </section>
      <h3>üöß Demo Mode</h3>
      <div>
        <p>
          <strong>Problem: </strong>Due to changes to Spotify's API rate quota, the app will not work with anyone not explicitly added to my developer
          whitelist, and will return a <code>403 error</code> if an endpoint call is made after authentication
        </p>
        <p>
          <strong>Solution: </strong> Catching the HTML error and displaying demo data for the user instead, along with an alert banner notifying them of the circumstance
        </p>
        <div class="flex justify-center">
          <Image src={top5DemoModal} alt="Top 5 Demo Modal" />
        </div>
      </div>
    </div>
  </ProjectPage>
</Layout>
